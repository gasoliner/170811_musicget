<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.musicget.mapper.SongMapper">
  <resultMap id="BaseResultMap" type="cn.musicget.po.Song">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="album" jdbcType="VARCHAR" property="album" />
    <result column="singer" jdbcType="VARCHAR" property="singer" />
    <result column="lyric" jdbcType="VARCHAR" property="lyric" />
    <result column="kwid" jdbcType="BIGINT" property="kwid" />
    <result column="comments" jdbcType="INTEGER" property="comments" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, album, singer, lyric, kwid, comments
  </sql>
  <select id="selectByExample" parameterType="cn.musicget.po.SongExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.musicget.po.SongExample">
    delete from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.musicget.po.Song">
    insert into song (id, name, album, 
      singer, lyric, kwid, 
      comments)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{album,jdbcType=VARCHAR}, 
      #{singer,jdbcType=VARCHAR}, #{lyric,jdbcType=VARCHAR}, #{kwid,jdbcType=BIGINT}, 
      #{comments,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.musicget.po.Song">
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="album != null">
        album,
      </if>
      <if test="singer != null">
        singer,
      </if>
      <if test="lyric != null">
        lyric,
      </if>
      <if test="kwid != null">
        kwid,
      </if>
      <if test="comments != null">
        comments,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="album != null">
        #{album,jdbcType=VARCHAR},
      </if>
      <if test="singer != null">
        #{singer,jdbcType=VARCHAR},
      </if>
      <if test="lyric != null">
        #{lyric,jdbcType=VARCHAR},
      </if>
      <if test="kwid != null">
        #{kwid,jdbcType=BIGINT},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.musicget.po.SongExample" resultType="java.lang.Long">
    select count(*) from song
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update song
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.album != null">
        album = #{record.album,jdbcType=VARCHAR},
      </if>
      <if test="record.singer != null">
        singer = #{record.singer,jdbcType=VARCHAR},
      </if>
      <if test="record.lyric != null">
        lyric = #{record.lyric,jdbcType=VARCHAR},
      </if>
      <if test="record.kwid != null">
        kwid = #{record.kwid,jdbcType=BIGINT},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update song
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      album = #{record.album,jdbcType=VARCHAR},
      singer = #{record.singer,jdbcType=VARCHAR},
      lyric = #{record.lyric,jdbcType=VARCHAR},
      kwid = #{record.kwid,jdbcType=BIGINT},
      comments = #{record.comments,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>